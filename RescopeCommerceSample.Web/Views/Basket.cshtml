@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Basket>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject IStockService stockService
@inject IProductStore productStore
@inject IBasketService basketService
@{
    Layout = "Master.cshtml";
    var basket = await basketService.GetOrCreateCurrentBasket(Html.GetStoreId());
}

@using (Html.BeginUmbracoForm<BasketSurfaceController>(nameof(BasketSurfaceController.UpdateBasket), null, new
{
    @Class = "basketForm"
}))
{
    <div class="container lg:!max-w-screen-lg mx-auto py-12">
        <div class="text-black mb-4">
            <h1 class="text-3xl font-bold">Your basket</h1>
        </div>

        @foreach (var item in basket.BasketLineItems)
        {
            var product = await productStore.GetProductOrVariant(item.ProductSku);
            var maxStock = await stockService.GetStock(item.ProductSku, 1000);
            <div class="text-black mb-4 flex gap-8">
                <div class="w-3/12">
                    <a href="@(product?.Content()?.AncestorOrSelf<RescopeProduct>().Url())" title="@product.Name">
                        <img class="aspect-square object-contain w-full" alt="@product.Name" src="@(product?.Content()?.AncestorOrSelf<RescopeProduct>().Image.Url())" />
                    </a>
                </div>
                <div class="flex-1 flex items-center">
                    <div>
                        @if (product is IProductVariant variant)
                        {
                            <h1 class="text-2xl font-bold"><a href="@(variant?.Content()?.AncestorOrSelf<RescopeProduct>().Url())" class="hover:underline">@variant.Parent.Name</a></h1>
                            <h2>@variant.Name</h2>
                        }
                        else
                        {
                            <h1 class="text-2xl font-bold">
                                <a href="@(product?.Content()?.AncestorOrSelf<RescopeProduct>().Url())" class="hover:underline">@product.Name</a>
                            </h1>
                        }

                        <div class="bg-white border border-neutral-200 inline-flex mt-2 mr-2">
                            <button type="button" class="py-1 px-2 btn_negate hover:text-indigo-600 transition-all">-</button>
                            <input min="0" max="@maxStock" name="product__@product?.Sku" class="quantityinput outline-none appearance-none w-12 px-2 text-center border-neutral-200 border-l border-r" value="@item.Quantity" />
                            <button type="button" class="py-1 px-2 btn_add hover:text-indigo-600 transition-all disabled:text-black/25" @(maxStock <= item.Quantity ? "disabled" : "")>+</button>
                        </div>

                        @item.TotalPriceFormatted
                    </div>
                </div>
            </div>
        }

        <div class="mb-3">
            <div class="flex items-center gap-2 justify-end text-end">
                <p class="opacity-75">Total</p>
                <p class="text-lg font-medium">@basket.TotalPriceFormatted @basket.Currency.Name</p>
            </div>
        </div>

        @if (basket.BasketLineItems.Any())
        {
            <div class="flex justify-end gap-4">
                <button type="submit" disabled class="update-btn bg-indigo-600 disabled:bg-slate-200 disabled:border-slate-300 disabled:text-slate-600 disabled:shadow-none disabled:font-normal text-white flex gap-2 font-bold px-3 py-1.5 rounded shadow-lg shadow-indigo-600/25 transition-all hover:bg-white hover:text-indigo-600 border border-indigo-600">
                    Update basket
                </button>
                <button data-href="@(Model.FirstChild<Checkout>().Url())" class="checkout-btn checkout-btn-green">
                    Checkout
                </button>
            </div>
        }
    </div>
}

<script src="/js/basket.js"></script>